@c -*-texinfo-*-
@c GNU MyServer
@c
@c Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
@c 2011 Free Software Foundation, Inc.
@c
@c This program is free software; you can redistribute it and/or modify
@c it under the terms of the GNU General Public License as published by
@c the Free Software Foundation; either version 3 of the License, or
@c (at your option) any later version.
@c
@c This program is distributed in the hope that it will be useful,
@c but WITHOUT ANY WARRANTY; without even the implied warranty of
@c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with this program.  If not, see <http://www.gnu.org/licenses/>.
Virtual hosts is a method to link more than a domain name to the same
machine, even if they refer to the same network interface.  Virtual
hosts are supported by the HTTP and HTTPS protocols.

For example http://mypc.net is different from http://sub.mypc.net.  
Virtual hosts are defined in the file @file{virtualhosts.xml}. 
A sample virtual hosts configuration file looks like:

@example
<VHOSTS>
  <VHOST>
    <NAME>Every connection</NAME>
    <PORT>80</PORT>
    <IP>192.168.0.0/24</IP>
    <PROTOCOL>HTTP</PROTOCOL>
    <DOCROOT>web</DOCROOT>
    <SYSROOT>system</SYSROOT>
    <HOST>foo.bar.com</HOST>
    <ACCESSLOG>
      <STREAM location="file://logs/myServer.log" cycle="1048576"/>
	  </ACCESSLOG>
    <WARNINGLOG>
      <STREAM location="file://logs/myServer.err" cycle="1048576"/>
    </WARNINGLOG>
    <ALLOW_CGI>NO</ALLOW_CGI>
  </VHOST>
</VHOSTS>
@end example

@itemize
@item <NAME>
it gives the server administrator an idea of what the virtual host
specifying a name for it.
@item <PORT>
it is the port used to accept connections.
@item <IP>
it is optional.  It defines a CIDR subnet mask in the format A.B.C.D/E
or defining the first and the last IP address in the range as
A.B.C.D-E.F.G.H.  Multiple masks can be defined for the same virtual
host.
@item <PROTOCOL>
it is the protocol used by the host.
@item <DOCROOT>
it is the directory where the files are found.
@item <SYSROOT>
it is the system directory.
@item <HOST>
it is your virtual host's name. The optional useRegex="YES"
means the address would act as a regular expression, not only a fixed
value.  Multiple host names can be defined for the same virtual host.
@item <ACCESSLOG>
it is a list of streams where log accesses to the virtual host.
@item <WARNINGLOG>
it is a list of streams where log warning and error messages for the
virtual host.
@end itemize

Log files can have extra options:

@example
<ACCESSLOG type="combined">logs/myServerHTTP.log</ACCESSLOG>
@end example

With this option, the logs will have two extra fields: HTTP Referrer
and HTTP User Agent.
Using cycle="yes" you will enable log cycler on the log file. When a
log file with cycling enabled reaches the max size for log files it
will write its content to a new file and recreate the original
file. By default cycled log files uses the gzip compression to save
space, if you don't want to use gzip specify cycle_gzip="no".
Here is an example of a FTP virtual host:

@example
<VHOSTS>
  <VHOST>
    <NAME>Ftp connection</NAME>
    <PORT>21</PORT>
    <IP>127.0.0.1/32</IP>
    <PROTOCOL>FTP</PROTOCOL>
    <DOCROOT>web</DOCROOT>
    <SYSROOT>system</SYSROOT>
    <HOST>ftp.foo.bar.com</HOST>
    <ACCESSLOG>
      <STREAM location="file://logs/myServer.log" cycle="1048576"/>
	  </ACCESSLOG>
    <WARNINGLOG>
      <STREAM location="file://logs/myServer.err" cycle="1048576"/>
    </WARNINGLOG>
  </VHOST>
</VHOSTS>
@end example

Tags semantics are identical with first example.
Although FTP is used for public file sharing, restrictions may be
imposed using security file.

@subsection Data throttling
It is possible to specify a throttling rate for the connection by the
@code{connection.throttling} value.  It can be specified in any
configuration file, at a global level, in the virtual host definition
and in the local security file.
Its value is specified in bytes/second.

The following line, for example, set the maximum transfer rate to 1
KByte/second:

@example
<DEFINE name="connection.throttling" value="1024"/>
@end example

@subsection Connections data pool
To improve performances, the server can use a cache of connections,
this value can be configured trough the server global variable
@code{server.connections_pool.size}.  If it is not specified, a
default value of 100 is used.  Increase this value if more connections
can be active at the same time.  Another effect of using a connections
cache is a less defragmented memory.

@subsection HTTP specific configuration

@subsubsection The LOCATION element
It may be necessary to register an entire location with a single
handler and it is done trought @code{LOCATION}.
Any other element passed after the location will be part of the
@code{PATH_INFO} variable.

@example
<LOCATION path="foo/bar" mime="text/html" handler="CGI"
          param="/usr/local/bin/handler" />
@end example

In the previous example, the CGI process @file{/usr/local/bin/handler}
is used to manage any request to the location @file{foo/bar}, this
location includes for example: @file{foo/bar}, @file{foo/bar/baz},
@file{foo/bar/a/file}, everything that follows @file{foo/bar} will be
part of @code{PATH_INFO}.

@subsubsection Disable specific HTTP methods
MyServer gives you the option to enable or disable HTTP methods
command for each virtual host.  It can be done trought the
@code{http.COMMAND.allow} variable.

For example, the HTTP TRACE command can be disabled using:

@example
<DEFINE name="http.trace.allow" value="NO" />
@end example
